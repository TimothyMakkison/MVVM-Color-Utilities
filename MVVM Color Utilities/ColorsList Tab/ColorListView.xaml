<UserControl x:Class="MVVM_Color_Utilities.ColorsList_Tab.ColorListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converter="clr-namespace:MVVM_Color_Utilities.Converters"
             mc:Ignorable="d">
    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding ExecuteCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="D" Command="{Binding DeleteItem}" />
        <KeyBinding Modifiers="Ctrl" Key="A" Command="{Binding AddSwitchCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="E" Command="{Binding EditSwitchCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding SampleColorCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="Q" Command="{Binding SampleColorCommand}" />
    </UserControl.InputBindings>

    <UserControl.Resources>
        <converter:BooleanToBrushConverter x:Key="DarkTrueLightFalseConverter"
                                           TrueBrush="{StaticResource PrimaryHueDarkBrush}"
                                           FalseBrush="{StaticResource PrimaryHueMidBrush}" />
        <converter:ColorToHexConverter x:Key="ColorToHex" />
        <converter:ColorToBrushConverter x:Key="ColorToBrush" />

        <DataTemplate x:Key="ListItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.8*" />
                    <ColumnDefinition Width="1.5*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Rectangle  Height="18" Width="60" Fill="{Binding Color, Converter={StaticResource ColorToBrush}}"
                                    Stroke="Gray"
                                    StrokeThickness="0.4" />
                <TextBlock Text="{Binding Name}" Width="160" Grid.Column="1" />
                <TextBlock Text="{Binding Color, Converter={StaticResource ColorToHex}}" Width="70" Grid.Column="2" />
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="70" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Width="270" HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0" />
                    <Setter Property="Height" Value="70" />
                </Style>
            </Grid.Resources>

            <Button Grid.Column="0" Command="{Binding Path=AddSwitchCommand}"
                    Content="{materialDesign:PackIcon Kind=Add}"
                    Background="{Binding AddingModeBool, Converter={StaticResource DarkTrueLightFalseConverter}, ConverterParameter=!   }" />

            <Button Grid.Column="1" Command="{Binding Path=EditSwitchCommand}"
                    Content="{materialDesign:PackIcon Kind=Edit}"
                    Background="{Binding AddingModeBool, Converter={StaticResource DarkTrueLightFalseConverter}}" />

            <Button Grid.Column="2" Command="{Binding Path=DeleteItem}"
                    Content="{materialDesign:PackIcon Kind=Delete}" />
        </Grid>

        <Grid Grid.Row="1" Background="{StaticResource PrimaryHueMidBrush}"
              Height="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.8*" />
                <ColumnDefinition Width="1.5*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0.7*" />
                <ColumnDefinition Width="1.2*" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="Background" Value="{StaticResource PrimaryHueLightBrush}" />
                    <Setter Property="Height" Value="20" />
                </Style>
            </Grid.Resources>

            <Rectangle Height="18" Width="60" Fill="White" />
            <Rectangle Height="18" Width="60" Fill="{Binding Color, Converter={StaticResource ColorToBrush}}" Stroke="Gray" StrokeThickness="0.4" />

            <TextBox Grid.Column="1" Width="160" Text="{Binding InputName, UpdateSourceTrigger=PropertyChanged}" />
            <TextBox Grid.Column="2" Width="80" Text="{Binding InputHex, UpdateSourceTrigger=PropertyChanged}" />

            <Button Grid.Column="4" Command="{Binding Path=SampleColorCommand}"
                    Style="{StaticResource MaterialDesignFlatMidBgButton}">
                <materialDesign:PackIcon Kind="Colorize" Width="40" />
            </Button>
            <Button Grid.Column="5" Command="{Binding Path=ExecuteCommand}">
                <materialDesign:PackIcon Kind="done" Width="100" />
            </Button>
        </Grid>
        <ListBox Grid.Row="2" ItemsSource="{Binding ColorListSource}"
                 SelectedItem="{Binding SelectedValue}"
                 SelectedIndex="{Binding SelectedItemIndex}"
                 ItemTemplate="{StaticResource ListItem}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightGray" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>
</UserControl>